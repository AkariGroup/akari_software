syntax = "proto3";

package akira_proto;

import "google/api/annotations.proto";
import "google/protobuf/empty.proto";

option go_package = "github.com/AkariGroup/akari_software/internal/akira/proto";

message ProjectManifest {
  string name = 1;
  string description = 2;
  string author = 3;
  string url = 4;
}

message CreateLocalProjectRequest {
  string dirname = 1;
  ProjectManifest manifest = 2;
  string template_id = 3;
}

message CreateProjectFromGitRequest {
  string git_url = 1;
  optional string dirname = 2;
  optional string branch = 3;
}

message EditProjectRequest {
  string id = 1;
  ProjectManifest manifest = 2;
}

message DeleteProjectRequest {
  string id = 1;
}

message Project {
  string id = 1;
  ProjectManifest manifest = 2;
  string path = 3;
}

message GetProjectRequest {
  string id = 1;
}

message ListProjectsResponse {
  repeated Project projects = 1;
}

message Template {
  string id = 1;
  string name = 2;
  string version = 3;
  string description = 4;
  string author = 5;
  string url = 6;
  repeated string tags = 7;
}

message ListTemplatesResponse {
  repeated Template templates = 1;
}

service ProjectService {
  rpc CreateLocalProject(CreateLocalProjectRequest) returns (Project) {
    option (google.api.http) = {
      post: "/projects/create/local"
      body: "*"
    };
  }

  rpc CreateProjectFromGit(CreateProjectFromGitRequest) returns (Project) {
    option (google.api.http) = {
      post: "/projects/create/git"
      body: "*"
    };
  }

  rpc EditProject(EditProjectRequest) returns (Project) {
    option (google.api.http) = {
      post: "/projects/edit"
      body: "*"
    };
  }

  rpc DeleteProject(DeleteProjectRequest) returns (google.protobuf.Empty) {
    option (google.api.http) = {
      post: "/projects/delete"
      body: "*"
    };
  }

  rpc GetProject(GetProjectRequest) returns (Project) {
    option (google.api.http) = {
      get: "/projects/detail"
    };
  }

  rpc RefreshProjects(google.protobuf.Empty) returns (google.protobuf.Empty) {
    option (google.api.http) = {
      post: "/projects/refresh"
      body: "*"
    };
  }

  rpc ListProjects(google.protobuf.Empty) returns (ListProjectsResponse) {
    option (google.api.http) = {
      get: "/projects"
    };
  }

  rpc ListTemplates(google.protobuf.Empty) returns (ListTemplatesResponse) {
    option (google.api.http) = {
      get: "/templates"
    };
  }
}
