version: "3.7"
services:
  daemon:
    build:
      context: ../../
      dockerfile: internal/docker/Dockerfile
      target: daemon
    image: akarirobot/akira-daemon:${AKIRA_IMAGE_TAG}
    platform: linux/aarch64
    volumes:
      - type: bind
        source: ${AKARI_REPOSITORY_DIR:?You need to run `source env.sh`}/internal/akira_templates
        target: /templates
        read_only: true
      - type: bind
        source: ${AKIRA_DEV_LOCAL_DIR:?You need to run `source env.sh`}
        target: ${AKIRA_DEV_LOCAL_DIR:?You need to run `source env.sh`}
      - type: bind
        source: /var/run/docker.sock
        target: /var/run/docker.sock
    environment:
      HOST_UID: ${HOST_UID:?You need to run `source env.sh`}
      HOST_GID: ${HOST_GID:?You need to run `source env.sh`}
      DOCKER_GID: ${DOCKER_GID:?You need to run `source env.sh`}
      AKIRA_PROJECT_DIR: ${AKIRA_DEV_LOCAL_DIR}/home/akari/projects
      AKIRA_ETC_DIR: ${AKIRA_DEV_LOCAL_DIR}/etc/akira
      AKIRA_VAR_DIR: ${AKIRA_DEV_LOCAL_DIR}/var/lib/akira
  gateway:
    build:
      context: ../../
      dockerfile: internal/docker/Dockerfile
      target: gateway
    image: akarirobot/akira-gateway:${AKIRA_IMAGE_TAG}
    platform: linux/aarch64
    environment:
      AKIRA_DAEMON_ENDPOINT: daemon:30001
    ports:
      - 8080:8080
